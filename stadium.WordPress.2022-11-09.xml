<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.5.11" created="2022-11-09 06:31" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Stadium</title>
	<link>https://stadium.software</link>
	<description>Low-code Web Application Builder</description>
	<pubDate>Wed, 09 Nov 2022 06:31:38 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://stadium.software</wp:base_site_url>
	<wp:base_blog_url>https://stadium.software</wp:base_blog_url>

		<wp:author><wp:author_id>3</wp:author_id><wp:author_login><![CDATA[Anthony]]></wp:author_login><wp:author_email><![CDATA[anthony.morris@twenty57.com]]></wp:author_email><wp:author_display_name><![CDATA[Anthony Morris]]></wp:author_display_name><wp:author_first_name><![CDATA[Anthony]]></wp:author_first_name><wp:author_last_name><![CDATA[Morris]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>7</wp:author_id><wp:author_login><![CDATA[Shantoie]]></wp:author_login><wp:author_email><![CDATA[shantoie.vorster@twenty57.com]]></wp:author_email><wp:author_display_name><![CDATA[Shantoie]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=5.5.11</generator>

<image>
	<url>https://stadium.software/wp-content/uploads/2019/08/stadiumfav.png</url>
	<title>Stadium</title>
	<link>https://stadium.software</link>
	<width>32</width>
	<height>32</height>
</image> 

		<item>
		<title>Stadium 5.11.2306.8639 is available (Hotfix)</title>
		<link>https://stadium.software/stadium-5-11-2306-8639-is-available-hotfix/</link>
		<pubDate>Tue, 28 May 2019 05:30:14 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://origin.stadium.software/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[This hotfix release only contains critical bug fixes. We are currently hard at work on our next feature release which will contain a lot of exciting new features!

<strong>BUG FIXES</strong>
Server Installer fails with message: "A DLL required for this install to complete could not be run."
Theme is not selectable in the Property Grid
EmbeddedFiles cannot be renamed using the context menu
Selecting an image from the Gallery assigns that image to all Image controls on the page
Undo loses it's history
Issues around undo-ing a page rename
Issues around undo-ing a CallScript action
Redo on Folder does not work in specific situations
"Name already in use" thrown when undo-ing web service import
Error on undo of DisplayMessageBox property
Settings indicate a "Name already used" error even though it has not been used
Object reference exception when closing an application
Importing Files and Folders dialog has no owner set to it]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date><![CDATA[2019-05-28 07:30:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-28 05:30:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stadium-5-11-2306-8639-is-available-hotfix]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[822]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Why we built Stadium</title>
		<link>https://stadium.software/why-we-built/</link>
		<pubDate>Tue, 28 May 2019 05:31:38 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://origin.stadium.software/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">Data lies at the heart of most businesses and can often be scattered over different databases, API’s and other sources. Coding a system that links it together in one application is a long, difficult and error-prone task. Maintaining such a system is even worse. Throw all of this together into a business world that moves at the speed of light and it becomes a huge challenge for current businesses to overcome.</span>

<span style="font-weight: 400;">As a software house, we needed a tool that would provide us with enough freedom to build applications according to our clients wishes as well as provide us with the power to achieve those ‘out-of-the-ordinary’ requests that come with certain projects. We had a look at many products out there and found none that had everything we required. Some allowed you to use a specific database hosted by them only, others tie you into a specific type of database or did not allow for data access across multiple data sources. Looking at the visual web application builders, the user was often required to be a graphic designer rather than simply build a web application that solves the business requirement, quickly and easily.</span>

<span style="font-weight: 400;">To overcome these challenges we created a low-code tool called Stadium. The main goals of this tool is to:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Rapidly build a web application</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Access your data anywhere</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Easily adapt to future changes or requirements

</span></li>
</ul>
<b>Rapidly build a web application</b>

<span style="font-weight: 400;">No hassle, no fuss. This is the motto we try to follow to allow you to focus on building a web application that fulfills your business requirements rather than on having to worry about the intricacies of coding. Use drag-and-drop to build your web pages and scripts with only requiring some minor coding when you want to do the really extraordinary.</span>

<b>Access Data Anywhere</b>

<span style="font-weight: 400;">Stadium does not prescribe how you should use your data or where it should live. Instead we introduced the concept of a connector which makes it possible to easily access your data, wherever and in whatever it is stored. The one missing bit currently, hopefully not for long, is a connector for an Object Database.</span>

<b>Easily adapt to future changes or requirements</b>

<span style="font-weight: 400;">The business landscape is fluid and constantly on the change. So will your business need to be in order to stand out and you will need to adapt quickly. We kept this in mind while building Stadium and made changing your application and maintaining it super easy. Adapting to changing business does not need to become a matter of planning months ahead of time anymore but simply do it on the fly as and when required.</span>
<h4><strong><span style="color: #333333;">What are our core competencies?</span>

</strong><strong></strong><strong></strong></h4>
<span style="font-weight: 400;"><strong>Your Data Security
</strong></span><span style="font-weight: 400;">Above all else, our commitment to safeguarding your data is the priority influence behind every feature and infrastructure decision we make. This is why we use Microsoft Azure, the world’s leading web service platform, to host our infrastructure and follow the strictest policy guidelines to protect your data 24/7.</span>

<strong>Customisation is King
</strong><span style="font-size: inherit;">There are many cookie-cutter app solutions out there. We’re not one of them. The cornerstone of Stadium that sets us apart is that we celebrate your unique business processes, and helping businesses build their applications around their custom needs instead of the other way around is what makes us tick.</span>

<span style="font-weight: 400;"><strong>Data Data Data
</strong>Stadium was founded on a mission of database application for anyone and we’ll never stop perfecting our no-code platform until everyone is empowered to build their own data driven applications regardless of their technical abilities or resources. We’re dedicated to making application development accessible to all and we’re committed to keeping our product (and eventually our pricing) in line with this mission.</span>

<span style="font-weight: 400;">As always, our work here is dedicated to building the best product we can for our users. To do so, we need your feedback. You can continue to add suggestions in our community or </span><a href="https://origin.stadium.software/contact/"><span style="font-weight: 400;">contact us</span></a><span style="font-weight: 400;"> at any time.</span>

<span style="font-weight: 400;">&nbsp;</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date><![CDATA[2019-05-28 07:31:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-28 05:31:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[why-we-built]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[stadium-5-11-2312-8770-is-available-hotfix]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[Why We Built Stadium | Stadium]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Do you need to build a web application? It's why we built Stadium and why we commited ourselves to building a tool to overcome today's business and IT challenges.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[web application]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Stadium 5 Roadmap</title>
		<link>https://stadium.software/stadium-5-roadmap/</link>
		<pubDate>Tue, 28 May 2019 05:32:45 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://origin.stadium.software/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[We understand that you are making an investment in the Stadium platform so it's important that we are transparent into where Stadium is going and what features will be included in the near future.

Since we introduced Stadium, our internal roadmap has been a living document. It changes weekly. We pride ourselves on the ability to move quickly and change directions to respond to demand, capture opportunities, and optimise resources to meet our client's needs.

Our roadmap is set out below. Although subject to change  we do hope it helps to provide some insight into where Stadium is going.

As always, our roadmap is completely defined by building the best product we can for our users. We need your feedback. You can continue to add suggestions in our community or <a href="https://origin.stadium.software/contact/" target="_blank" rel="noopener noreferrer">contact us</a> at any time.

<a href="https://trello.com/b/J2C4T0bb/stadium-5-roadmap"><strong>SEE THE STADIUM ROADMAP ON TRELLO</strong></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2019-05-28 07:32:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-05-28 05:32:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stadium-5-roadmap]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="roadmap"><![CDATA[Roadmap]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-applicaitons"><![CDATA[Web applicaitons]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[roadmap]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[Product Roadmap | Stadium]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Get an overview of the Stadium platform and product roadmap. Learn more about how we are approaching the design and roll out of of great data-driven web applciations.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.12</title>
		<link>https://stadium.software/new-release/</link>
		<pubDate>Tue, 13 Aug 2019 14:16:40 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=816</guid>
		<description></description>
		<content:encoded><![CDATA[Last week we released the new version of Stadium. This release contains features that moves us considerably closer to our target for this year: Enabling you to easily build and deploy your applications to our hosted environment in the cloud.

The new features are;
<h2>Stadium Application Manager</h2>
The Stadium Application Manager (better known as SAM) is one of our key features that paves our way to the Stadium Cloud Server - and now it is finally complete! SAM is our powerful application management tool where you individually manage every Stadium application you deploy to the Stadium Server. Here you can change the Login Mode, update your Configurations and Settings, enable the User API, view the Update History or swop into Debug Mode. The Web UI of SAM is easy to use and accessible to anyone you grant permission to.

&nbsp;
<h2>Remote Deployment</h2>
Previously, it was only possible to deploy to a remote Stadium Server via SAM’s Web UI. Now you can setup the different Server’s you work with in your Designer, whether it is 1 or many, and effortlessly deploy changes to the appropriate remote Server without leaving the Designer.

&nbsp;
<h2>JavaScript action</h2>
In one of our Stadium applications we built recently, we needed a timer on a page to refresh a DataGrid at regular intervals. This was not possible via the standard Stadium controls or actions. That is, not until the JavaScript action was introduced! The JavaScript action allows you to write functions and blocks of code which will be run at the point where the action was added into your Stadium Script. Use this action as an extension point to add special behaviour, inject 3rd party controls, or do something we have not thought of yet on your web page.

See more of Stadium’s future plans on the <a href="https://stadium.software/stadium-5-roadmap/">roadmap</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>816</wp:post_id>
		<wp:post_date><![CDATA[2019-08-13 16:16:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-13 14:16:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[819]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Stadium Goes Cloud</title>
		<link>https://stadium.software/stadium-cloud/</link>
		<pubDate>Wed, 04 Dec 2019 12:28:00 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1418</guid>
		<description></description>
		<content:encoded><![CDATA[We now offer dedicated hosted Stadium Servers taking all the hassles and problems of hosting your own Server as well as your applications off your hands. Do you foresee your application growing with popularity? See your userbase increase in the future? Need an additional database? No problem! Simply let us know and we will scale up your server to need all the requirements you might have.
<h2 dir="ltr">
Preview</h2>
<p dir="ltr">Building an application and debugging it can be the most time-consuming task of it all. This is exacerbated if the process of viewing changes to that application is cumbersome.</p>
<p dir="ltr">As a result, we introduced Preview to improve and streamline previewing - and thus debugging also - of your application. Preview builds, deploys and logs you into your application thus leaving you only to check the functionality thereof. All of this is being done in a sandboxed local IIS server therefore not affecting any live site you might already have out there. Once you approve of the changes to the application, simply deploy it to the hosted Stadium Server to take it live.</p>
<p dir="ltr"></p>
<p dir="ltr"></p>

<h2 dir="ltr">New Expression Editor</h2>
<p dir="ltr">The Expression Editor has a completely new look with a brand-new section - Code Snippets. Expressions in Stadium are complex JavaScript statements used to set the value of controls or actions. Code Snippets allow you to quickly and easily construct these expressions, even if you are not very familiar with the JavaScript syntax.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1418</wp:post_id>
		<wp:post_date><![CDATA[2019-12-04 14:28:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-12-04 12:28:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stadium-cloud]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[822]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[cloud]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[45]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>We&#039;re here to empower business.  The Stadium story.</title>
		<link>https://stadium.software/stadium-story/</link>
		<pubDate>Thu, 19 Dec 2019 13:50:32 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1436</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;">There’s been a big movement to cloud and the adoption of SaaS in recent years, and in this context, there is a major shift happening from Information Technology (IT) to Business Technology (BT). BT differs from IT in the scale of apps, speed, agility, and being business impact driven. We created Stadium with one mission – to deliver rapid web applications to meet a wide-range of diverse business needs, delivered by a powerful feature-set, simple architecture and a community powered approach that business and IT users can lean on to get the job done.</span></p>
<p><span style="font-weight: 400;">Until now there have only been two ways to build a web application: 1) learn to code or 2) hire people who know how to code. The former is a huge knowledge gap for non-engineers; the latter is very expensive.</span></p>
<p><span style="font-weight: 400;">It’s the reason why we built Stadium - a platform that generates the code underneath your design, allowing you to build applications without needing to write any code. We aim to enable a wall-to-wall approach for building and hosting powerful, data-based web applications to meet business needs. We don’t aim to build the next great app but rather our priority is to deliver a product to unlock and accelerate digital transformation within companies that need a better way to display and work with their data.</span></p>
<h2 dir="ltr">Let's Rewind</h2>
<p><span style="font-weight: 400;">Coding, however, still looks very much like it did 20 years ago. Yes, things have become easier. Programming languages have become more abstract, open source facilitates collaboration, and communities like Stack Overflow help learning. But at the end of the day, the coding process is still typing highly structured text (code) into a text editor in a way that the computer can understand. If you’re building a web app with a Ruby backend, then you have to worry about sending data from the server to the client, talking to a database, the way web browsers translate html and css into your user interface, asynchronous vs synchronous event code, and much more.</span></p>
<p dir="ltr"> </p>
<p><span style="font-weight: 400;">Our vision is to make the business of building and delivering custom web apps simpler. If you want to use your data - no matter the format,  manipulate and empower your data without another add-on or even simpler, if you want that button red, we believe you shouldn’t have to write code. The Stadium principles allow for a diverse range of data inputs including relational databases, web services or files. Our UI builder is the fastest way to create a front-end for data manipulation and presentation, and all you need to do is point to that button and select a shade of red. </span></p>
<p dir="ltr"> </p>
<p><span style="font-weight: 400;">A core belief of the founding team is that coding and programming should be two different things. All you need is a degree of fundamental knowledge of how an application should function {programming} and how your application should work and look like - we’ll do the code.</span></p>
<p dir="ltr"> </p>
<p><span style="font-weight: 400;">That’s the essence of Stadium, building functional, fast, hyper-scalable web apps for business people. Technical or not, we want to bring your data to the front-end and allow you to start innovating online; Build web applications. With your data. Without code.</span></p>
<p dir="ltr"> </p>
<p dir="ltr"> </p>
<h2 dir="ltr">Fast Forward</h2>
<p><span style="font-weight: 400;">There are two primary reasons you should use Stadium. The platform will save you time and money. It takes months to learn how to code. Stadium cuts through the learning curve by utilizing drag and drop elements. The user will populate the canvas with these elements and ultimately define the data source, style and theme of your application. Using Stadium is less expensive than hiring a professional developer. It’s not uncommon for the services of a good developer to cost thousands of dollars, depending on the complexity of the application.</span></p>
<p dir="ltr"> </p>
<p><span style="font-weight: 400;">The second reason is the ease of use. Yes, we could say drag and drop UI makes things easy but there are thousands of apps that do that. As a business, you strive for flexibility, agility and painless progress.  Stadium offers this - and more - an end to end platform.</span></p>
<p> </p>
<p><b>Integrating Data:</b><span style="font-weight: 400;"> Often the bugbear of many an organisation. Stadium is data-source agnostic allowing you to effortlessly connect your business data without disruption or changes to your current IT architecture. With no need to worry about the underlying complexities, you can design applications that leverage your existing systems and cloud services to deliver rapid innovation in your business. </span></p>
<p dir="ltr"> </p>
<p><b>Design Flexibility:</b><span style="font-weight: 400;"> Design your app your way, using modern themes and if it’s necessary dropdown to Javascript in order to tweak things. Designs are simple to change, updates easy to handle and above all, it’s all done in low-code.</span></p>
<p><span style="font-weight: 400;"><br /></span><b>Hosting: </b><span style="font-weight: 400;"> If you are hosting a static front-end app, this shouldn’t really be of concern. But since Stadium is suited to building highly dynamic, data-driven business apps, it does become slightly trickier as you rely on custom server-side APIs or databases to function.  Not only do we provide a server for your application code to run on, but it’s completely customisable. Add databases, upgrade security or add other external services to your application cluster as you see fit. Oh, and by the way, you can deploy with one click from your Designer. </span></p>
<p dir="ltr"> </p>
<p><span style="font-weight: 400;">You can focus on project development as we cover the technical stuff.  Infrastructure, maintenance and upkeep? Sorted. Scalability, performance and security? Built in. Customisation? Always.</span></p>
<p dir="ltr"> </p>
<p dir="ltr"> </p>
<h2 dir="ltr">Right Now</h2>
<p><span style="font-weight: 400;">With all of the above, Stadium has been built to meet the growing demand to develop and release applications not only faster but exactly matched to what your business needs.  Users want to use software that is fast, highly flexible, easy to integrate and very secure. The platforms must not only be intuitive, but also come with a host of easy-to-use plugins, templates, etc. that enable you to create your own custom database applications.</span></p>
<p><span style="font-weight: 400;">So here is Stadium, a low-code solution to take application development from a multistep, technology-intensive process to a simple three-part path: build, deploy, and manage - without having to master a plethora of computing languages.  A tool to deliver rapid web applications geared toward businesses without any coding. <a href="https://stadium.software/download/">Give it a try</a>…..</span></p>
<p> </p>
<hr />
<p>Do you like Stadium? Tell us your thoughts by writing a review<br /><br /></p>

<!-- wp:html -->
<!-- Begin SF Tag -->
<div class="sf-root" data-id="3321742" data-badge="light-default" data-metadata="" style="width:80px">
<a href="https://sourceforge.net/software/product/Stadium/" target="_blank" rel="noopener noreferrer">Stadium Reviews</a>
</div>
<script type="text/javascript">(function () {var sc=document.createElement('script');sc.type='text/javascript';sc.async=true;sc.src='https://b.sf-syn.com/badge_js?sf_id=3321742';var p=document.getElementsByTagName('script')[0];p.parentNode.insertBefore(sc, p);})();
</script>
<!-- End SF Tag -->


<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1436</wp:post_id>
		<wp:post_date><![CDATA[2019-12-19 15:50:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-12-19 13:50:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stadium-story]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>1</wp:is_sticky>
										<category domain="post_tag" nicename="application-develpment"><![CDATA[application develpment]]></category>
		<category domain="post_tag" nicename="developer-tools"><![CDATA[developer tools]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[819]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[stadium application]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[%%title%% %%page%%]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.14</title>
		<link>https://stadium.software/new-release-stadium-5-14/</link>
		<pubDate>Tue, 03 Mar 2020 12:20:50 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1624</guid>
		<description></description>
		<content:encoded><![CDATA[The latest version of Stadium is out. This release contains some nifty new features that will make building your next great web application even easier.

The new features are;
<h2>Session Variables</h2>
<span style="font-weight: 400;">Stadium has two types of variables - ‘script variables’ and now also ‘session variables’. Script variables have been around for quite a while and are defined in a script by dragging the Variable action onto the script. Once this has been done, the variable can only be used throughout that specific script and ceases to exist as soon as the script completes. Session variables, on the other hand, are defined on the Application level. They can be used across all of the application’s pages and exist for as long as the user’s session is active in the application.</span>
<h2>Application Properties</h2>
<span style="font-weight: 400;">Set both the </span><i><span style="font-weight: 400;">HTTP Response Headers</span></i><span style="font-weight: 400;"> and the </span><i><span style="font-weight: 400;">Maximum File Upload Size</span></i><span style="font-weight: 400;"> for your application from within the Designer. This allows you to set them up as you are building the application and removes the need for you to remember to set them up when eventually deploying your application to the Stadium Server.</span>
<h2>Find References</h2>
<span style="font-weight: 400;">Where did I use that query in my application? Where is the control value being changed? ‘Find References’ answers all these questions by displaying all locations where a specific control, action, setting, page parameter, script parameter, etc. is used or accessed.</span>
<h2>Preview Logging</h2>
<i><span style="font-weight: 400;">Preview</span></i><span style="font-weight: 400;"> was added in the previous release. It not only allowed you to quickly and easily view the application you built on your local computer, but also logged some basic information to the browser dev console while a script was executing. In this release, we improved the logging by adding detailed logs when a web service is executed. Before now, when a web service call failed, you were pretty much left guessing what could have gone wrong. With the new web service logs, you are able to see in detail what Stadium did and where it failed. Information like&nbsp; authentication details, URL, headers, querystring, response, etc are all logged to the browser dev console allowing you to easily investigate and pinpoint the problem. If you need to resend the request, simply use the logged information to feed it into a tool like <a href="https://www.postman.com/">Postman</a> and resend it.</span>

See more of Stadium’s future plans on the <a href="https://stadium.software/stadium-5-roadmap/">roadmap</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1624</wp:post_id>
		<wp:post_date><![CDATA[2020-03-03 14:20:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-03 12:20:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-14]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Web applicaiton]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.15</title>
		<link>https://stadium.software/new-release-stadium-5-15/</link>
		<pubDate>Wed, 24 Jun 2020 08:13:23 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1633</guid>
		<description></description>
		<content:encoded><![CDATA[The latest version of Stadium is out. This release contains some nifty new features that will make building your next great web application even easier.

The new features are;
<h2><span style="font-weight: 400;">Styles</span></h2>
<span style="font-weight: 400;">Stadium provides you with default styles for your generated applications. At times however, you might want to change the default look of your application to reflect the colours of your business or change the style to better accommodate your design. The new Style tab now allows you, whether a beginner or expert CSS user, to easily override the default styles and customize the application to your exact styling requirement.</span>

<img class="wp-image-1641 alignnone" src="https://stadium.software/wp-content/uploads/2020/06/2020-04-14_15h44_39-1-300x156.png" alt="" width="600" height="312" />

<span style="font-weight: 400;">The Style editor consists of 4 parts:</span>
<ol>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">the </span><i><span style="font-weight: 400;">selector</span></i></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">the </span><i><span style="font-weight: 400;">pseudo classes</span></i></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">basic CSS properties</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Free-text CSS area</span></li>
</ol>
<span style="font-weight: 400;">The </span><i><span style="font-weight: 400;">selector</span></i><span style="font-weight: 400;"> determines what element(s) the style will be applied to in the generated application. It is divided into two categories, </span><i><span style="font-weight: 400;">Controls</span></i><span style="font-weight: 400;"> and </span><i><span style="font-weight: 400;">Pages</span></i><span style="font-weight: 400;">. Any style you change under the </span><i><span style="font-weight: 400;">Controls</span></i><span style="font-weight: 400;"> section will be applied to all controls of the same type across your entire application. Styles under </span><i><span style="font-weight: 400;">Pages</span></i><span style="font-weight: 400;"> will only be applied to that one specific control. </span>

<span style="font-weight: 400;">The </span><i><span style="font-weight: 400;">pseudo classes</span></i><span style="font-weight: 400;"> (section 2) allows you to define different styles for the different states a control can be in, e.g you can create a different style for each one of the states a hyperlink can be in: ‘Normal’, ‘Visited’, ‘Hover’ or ‘MouseDown’.</span>

<span style="font-weight: 400;">Section (3) allows you to easily change the basic styling by simply setting the appropriate properties. As a property changes, the section marked as (4) updates to reflect the CSS that will be applied. </span>

<span style="font-weight: 400;">The </span><i><span style="font-weight: 400;">free-text CSS area </span></i><span style="font-weight: 400;">is where the advanced CSS user can make the real magic happen by adding any advanced CSS declarations that he wishes to.</span>
<h2><span style="font-weight: 400;">

Preview Logging</span></h2>
<span style="font-weight: 400;">In the previous release we introduced Preview Logs which expose detailed runtime information of the actions. Database and web service calls are now also being logged to the preview logs. This enables you to debug and correct any possible issues that might occur while making such calls. </span>

<span style="font-weight: 400;">For database calls, the information logged differs for the type of query being executed. Below is the info logged for a standard SELECT query:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Connection String</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Command Type</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Nr of rows returned in the result</span></li>
</ul>
<span style="font-weight: 400;">
For Web Service calls, the following info is logged:</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Authentication details</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Type </span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Username (for Auth Type ‘Basic’)</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Password (for Auth Type ‘Basic’)</span></li>
</ul>
</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Request details</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">URL</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">HTTP Method</span></li>
</ul>
</li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Response details</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Status Code</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Reason Phrase</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Media Type</span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">Content</span></li>
</ul>
</li>
</ul>
<span style="font-weight: 400;">Below you can see an example of the preview logs of a web service call to the Random User API.</span>

<img class="alignnone wp-image-1644" src="https://stadium.software/wp-content/uploads/2020/06/2020-04-14_17h02_08-1-300x223.png" alt="" width="600" height="446" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1633</wp:post_id>
		<wp:post_date><![CDATA[2020-06-24 10:13:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-24 08:13:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-15]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[web application]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[New Release V5.15 | Stadium]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Get the latest version of Stadium. Learn more about how we are approaching the design and roll-out of great data-driven web applications.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.16</title>
		<link>https://stadium.software/new-release-stadium-5-16/</link>
		<pubDate>Thu, 02 Jul 2020 06:35:53 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1647</guid>
		<description></description>
		<content:encoded><![CDATA[The latest version of Stadium is out. <span style="font-weight: 400;">The new feature included in this release is a new Async action. Read on for more detail.</span>

<span style="color: #333333; font-size: 1.95em; font-weight: 600;">Async Action</span>

<span style="font-weight: 400;">Synchronous programming only allows one thing to happen at a given time. An action starts and waits to complete before starting another action. Asynchronous programming, in contrast, allows multiple things to happen at the same time, i.e. all actions are started at once and the completion of one does not affect the other one. From this, hopefully it can be seen that asynchronicity greatly reduces runtime as tasks do not need to wait on one another before starting. And on a UI, shorter runtime equals happier users!</span>

<span style="font-weight: 400;">A new action in Stadium, quite aptly named </span><b><i>Async</i></b><span style="font-weight: 400;">, was included exactly because of this reason. Any actions dragged into the new Async action run asynchronously. In addition to this, the developer can decide what should happen at the end of the Async block: Wait or Fire-and-forget. ‘Wait’ allows the Async action to first collect the output of all the child actions as they complete before continuing with the rest of the script - this behaviour would be the same as querying multiple data sources and waiting for the result of all calls before continuing. ‘Fire-and-forget’ would immediately continue with the script, not bothering to wait for the child actions to complete first - essentially the same as starting a task in the background and leaving it to complete on its own.</span>

<img class="alignnone  wp-image-1648" src="https://stadium.software/wp-content/uploads/2020/07/Screenshot-2020-07-02-at-08.34.56-300x178.png" alt="" width="564" height="335" />

<span style="font-weight: 400;">With this new action, web pages using many different connector functions or data sources can be built to be more performant. Also, web pages can now run tasks in the background rather than force the users to sit and wait for them to complete.</span>

See more of Stadium’s future plans on the <a href="https://stadium.software/stadium-5-roadmap/">roadmap</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1647</wp:post_id>
		<wp:post_date><![CDATA[2020-07-02 08:35:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-02 06:35:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-16]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Web applicaiton]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.17</title>
		<link>https://stadium.software/new-release-stadium-5-17/</link>
		<pubDate>Fri, 14 Aug 2020 11:56:17 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1656</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-weight: 400;">Every application you build in Stadium contains confidential data. Data relevant only to you or meant for your eyes only. Passwords, API keys and tokens are all examples of this kind of data. The world calls these secrets - so do we. </span></p>
<p><span style="font-weight: 400;">Up until now Stadium had no concept of secrets and everything was stored inside the application file, better known as the “sapz” (</span><span style="font-weight: 400;">sæp zɛd</span><span style="font-weight: 400;">). To avoid exposing your secrets, you had to scrub the sapz of any sensitive information before sharing or committing it into source control. Not anymore though. </span></p>
<p><i><span style="font-weight: 400;">Secrets</span></i><span style="font-weight: 400;"> is the new <a href="https://stadium.software/">feature in Stadium</a>. Any data marked as a secret in Stadium remains your data and is not stored in the sapz but in a secured vault, specific to that logged-in windows user and computer. That means if you enter a secret value on your home laptop and then later open the same sapz on your work laptop that secret will be blank. Or, should someone else log onto your computer and open your sapz, all secrets will be blank. Your secret remains exactly that - a secret. </span></p>
<p><span style="font-weight: 400;">Secrets on SAM work exactly the same with one difference. Secrets are not stored under the logged-in user profile but rather under the user profile SAM runs underneath, usually the ApplicationPoolIdentity. The implication of this is that when you deploy an application for the first time to SAM after starting to use secrets, you will be required to re-enter those secrets on SAM. Storing secrets under a single account, the ApplicationPoolIdentity, also allows multiple admin users to administer the same applications on SAM and still be able to view and edit secrets entered by another admin. For example, when you log into SAM and enter a secret, that secret is not stored under your profile but under the ApplicationPoolIdentity profile. Because all other users logging into SAM use the same profile, they will be able to see and edit that secret entered by you and vice versa.  </span></p>
<p> </p>
<p><span style="font-weight: 400;">“So how do I use secrets in Stadium?” I hear you asking. Here’s how</span></p>
<p> </p>
<h3>1. Create a Setting</h3>
<p><span style="font-weight: 400;">Click on Settings in the Application Explorer and type a name and value for your setting.</span></p>

<!-- wp:image {"id":1658,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2020/08/1-Create-a-setting-1024x356.png" alt="" class="wp-image-1658"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>2. Mark the Setting as a secret</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In this step, you tell Stadium that the value should not be stored in the SAPZ but rather in your personal secured vault on your laptop or computer. Immediately when the secret checkbox is checked, the value of your setting will be masked. To view it in plaintext again, simply click the eye in the textbox. This only displays the value in plaintext but it remains stored in your encrypted vault on your laptop or computer.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1659,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2020/08/2-Mark-the-setting-as-a-secret-1024x362.png" alt="" class="wp-image-1659"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>3. Use the Setting</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>All the hard work has been done at this point :) Now you can simply assign the setting to any property in Stadium by selecting it from the dropdown. In the image below I am selecting MySetting1 as the value of the Northwind ConnectionString. When the application runs, the value of the secret setting will be used as the connectionstring.<br></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1660,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2020/08/3-Use-the-setting.png" alt="" class="wp-image-1660"/></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1656</wp:post_id>
		<wp:post_date><![CDATA[2020-08-14 13:56:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-14 11:56:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-17]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Web applicaiton]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[45]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.18</title>
		<link>https://stadium.software/new-release-stadium-5-18/</link>
		<pubDate>Fri, 09 Oct 2020 12:04:08 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1670</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>A picture is worth a million words! This is a well-known adage very applicable to charts. Charts are an essential part in determining trends, relationships and patterns in data. Without charts, finding these patterns can become tricky and time-consuming. As a result of this, we saw charts, or the visualization of your data, as an essential control in Stadium. <br><br>Below you can see the Stadium Chart Control in action:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1672,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2020/10/chart_examples-1-1024x875.png" alt="" class="wp-image-1672"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><span style="font-weight: 400;">Up until now Stadium had no concept of secrets and everything was stored i</span>Stadium’s Chart control is easy to use, versatile and powerful thanks to the eCharts library it uses under the hood. eCharts provides you with a huge selection of chart types as well as the ability to modify almost anything of the chart itself - change the style of the legend, how tooltips are shown, and countless other things. All of this is done via the javascript object, ‘option’, defined by eCharts. This very option object is what you assign to the Stadium Chart control thereby allowing you all the versatility and power eCharts has to offer. Look through the rich library of <a href="https://echarts.apache.org/examples/en/index.html">examples</a> as well as the detailed <a href="https://echarts.apache.org/en/option.html">eCharts documentation</a> to see for yourself what is possible in eCharts. <br><br>For a quick overview on chart terminology and chart types, see the <a href="https://echarts.apache.org/en/cheat-sheet.html">eCharts cheat sheet</a>.<br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For more on the Chart control in Stadium, see our <a href="https://stadium.software/docs/Controls/Chart">documentation</a>.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1670</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 14:04:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 12:04:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-18]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[echarts]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.19</title>
		<link>https://stadium.software/new-release-stadium-5-19/</link>
		<pubDate>Tue, 09 Feb 2021 13:47:21 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1783</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>The page canvas in the Designer is all about the control layout on your page and not so much about the visual accurateness of those controls. We have taken this a step further by abstracting the controls even more and removing all unnecessary white space between them as much as possible. The result is a better overview of your page and the layout thereof. The <em>before</em> and <em>after</em> screenshots below clearly show the improvement.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1786,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/02/before-1024x549.png" alt="" class="wp-image-1786"/><figcaption>Before</figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":1785,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/02/after-1024x549.png" alt="" class="wp-image-1785"/><figcaption>After</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Previously, as seen in ‘<em>before</em>’, the canvas tried to accurately represent the controls during design time - or that is what it seemed like for most users. But in actual fact, controls were not supposed to mimic the run-time representation but rather simply indicate where the control would be positioned on the page. This misrepresentation confused a lot of users expecting to see a change on the canvas when control properties were changed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Another issue caused by the misrepresentation was the wasted whitespace on the canvas, distracting the user from the canvas’ actual purpose: page layout. Most of that whitespace was due to how the controls were displayed on the canvas. To understand this, one first needs to understand the framework of a Stadium page. A page could be seen as being divided into many horizontal swimlanes, one below the other. Every swimlane can contain controls side by side, but not above or below each other. This meant when a Label was positioned next to an Image control, a large area of whitespace below the Label control was unusable and therefore “wasted space” (see image below).</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1787,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/02/swimlanes-1024x300.png" alt="" class="wp-image-1787"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>All of the above considerations led us to what we call the “Blocky Layout”. In the latest canvas, all controls are represented by equally sized blocks containing the control name and the icon differentiating the type of control. These blocks are abstract enough to not mislead anyone into thinking it is the control’s real representation. It also allows for a much neater and minimalistic canvas with almost no wasted space, leaving you to focus on what the canvas was originally intended for - laying out the controls on your page.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Please <a href="https://stadium.software/contact/">let us know </a>what your impression is of our Blocky Layout! </p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1783</wp:post_id>
		<wp:post_date><![CDATA[2021-02-09 15:47:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-02-09 13:47:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-19]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[New release]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.20</title>
		<link>https://stadium.software/new-release-stadium-5-20/</link>
		<pubDate>Mon, 17 May 2021 12:00:29 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1790</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Single Sign-on</h2>
<!-- /wp:heading -->

<p><span style="font-weight: 400;">Single Sign-on is used by most web apps these days and is now also available in Stadium as an authentication type for its applications. To achieve this, we used the OpenID Connect authentication protocol.<br /><br /></span></p>

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 protocol. It allows Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.</p><cite><em>Extract from </em><a href="https://openid.net/connect/"><em>https://openid.net/connect/</em></a><br></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>Our main goal with SSO in Stadium was to enable central user management across several different applications. With this in mind, we had a look at several well-known and popular OIDC providers and, as a start, decided to support Okta, Auth0, and Google with Azure AD soon to follow.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>An essential part of user management is the assignment of roles to a user. For Stadium, this can be done solely in the OIDC provider, within the generated application itself, or independently in both. Should role assignments be done in both, a merged set will be applied to the user when they log in.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>See <a href="https://stadium.software/docs/HowItWorks/ApplicationManager#loginmode">here</a> for more on SSO in Stadium and how to use it.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>URL Editor</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our UX tests indicated that some users struggle to pass parameters between pages.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To address this problem, we completely revisited and redesigned the way URLs are handled in Stadium. Instead of a series of dropdowns, we now opted to display a URL in a javascript templated string. The result is a much more URL-like string than before, easy to understand, read and edit.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1791,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/05/Screenshot-2021-05-17-at-13.58.54.png" alt="" class="wp-image-1791"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>We also added a new URL Editor to quickly and easily build this templated string. In this editor, users can select the destination and select parameters from the dropdowns or just type them in.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1792,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/05/Screenshot-2021-05-17-at-13.59.03.png" alt="" class="wp-image-1792"/></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1790</wp:post_id>
		<wp:post_date><![CDATA[2021-05-17 14:00:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-17 12:00:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-20]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[web application]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[New Release V5.20 | Stadium]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Get the latest version of Stadium. Learn more about how we are approaching the design and roll-out of great data-driven web applications.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.21</title>
		<link>https://stadium.software/new-release-stadium-5-21/</link>
		<pubDate>Wed, 07 Jul 2021 08:44:49 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1795</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The latest version of Stadium is out. <span style="font-weight: 400;">The new feature included in this release is a new Async action. Read on for more detail.</span></p>
<p> </p>

<!-- wp:heading -->
<h2>Layout Controls</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Page Layout is one of the key aspects of building an excellent web application. It displays controls and data on pages in a way that would make sense to your users, helping or leading them through your application and making their experience a productive, easy and enjoyable one.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this release, we are adding three new layout controls to the collection of controls in the Stadium toolbox. They are:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Container</li><li>Flexbox</li><li>Grid</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Container</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our container renders out as a stock-standard, unstyled HTML div. To use it, simply drop the Container on your page, place controls in it and then apply additional styling to the div to achieve your required layout on the page. To get to the Styling editor in the Stadium Designer, simply right-click on the Container and select Style.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can see what a basic, unstyled Container looks like in the Designer on the image below. Immediately below that, you can see what the final result would be in the browser.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1796,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/07/Container-Designer.png" alt="" class="wp-image-1796"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":1797,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/07/Container-Browser.png" alt="" class="wp-image-1797"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Flexbox</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Flexbox is a CSS layout module used to display a one-dimensional list. Some Flexbox features are displaying items horizontally or vertically, wrapping items, stretching items to fill the row/column, and many more. For detailed information on the Flexbox, see:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox">Basic concepts of flexbox</a></li><li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">A Complete Guide to Flexbox</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The image below shows an example of Flexbox in the Stadium Designer. The following image shows you how Flexbox renders in the browser.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1798,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/07/Flexbox.png" alt="" class="wp-image-1798"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Grid</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Grid control is the most powerful of the three new controls. It renders out as a pure CSS Grid and is used to create complex 2-dimensional page layouts. For a detailed write-up of the CSS Grid, see:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout">CSS Grid Layout</a></li><li><a href="https://css-tricks.com/snippets/css/complete-guide-grid/">A Complete Guide to Grid</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>In the Stadium Designer, drag a Grid control onto the page and start dropping controls into it. Add controls side-by-side to create columns or beneath each other for rows. Then, use CSS to apply further styling to it. Any feature CSS Grid offers you is available to you via the Styling.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The image below shows a basic CSS Grid with 5 labels in it. The second image shows you how it renders in the browser.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1801,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/07/Grid-1.png" alt="" class="wp-image-1801"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":1802,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/07/Grid_in_browser-1.png" alt="" class="wp-image-1802"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Read further on how to use each one of these controls in our <a href="http://staging.stadium.software.s3-website-us-east-1.amazonaws.com/docs/Controls">docs</a>. Then, take the new Layout Controls for a spin and let us know what you think!</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1795</wp:post_id>
		<wp:post_date><![CDATA[2021-07-07 10:44:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-07 08:44:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-21]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[820]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Web applicaiton]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[41]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.22</title>
		<link>https://stadium.software/new-release-stadium-5-22/</link>
		<pubDate>Wed, 08 Sep 2021 07:42:50 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1805</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>We are really excited to release this version! It includes the first release of the <strong><em>Repeater</em></strong> control that we have been working very hard on! </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Repeater</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Cards, lists, tables are just some of the ways to display a dataset on a webpage. In Stadium, we wanted to introduce a control that allows you to display your dataset on your page without restricting you in how you want to display it.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Repeater control is a visual template that allows you total freedom to design a view for the dataset. At design time, the visual template represents the view of one object in the dataset. At runtime, this visual template you designed is taken and applied uniformly to every item in the dataset. To control the layout of the repeated items on your page, simply drop the Repeater into a <a href="https://stadium.software/new-release-stadium-5-21/">Layout Control</a>. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1807,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/09/Image-a-1024x689.png" alt="" class="wp-image-1807"/><figcaption>View at design time</figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":1808,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/09/Image-b-1024x650.png" alt="" class="wp-image-1808"/><figcaption>View at runtime</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Using the Repeater is a 3 step process:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Build the template</li><li>Create the ItemLoad event</li><li>Assign the dataset</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Look at the <a href="https://stadium.software/docs/Controls/Repeater">Repeater </a>in our <a href="https://stadium.software/docs/">docs</a> for more info on each of these steps.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Application Head Property</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When building applications, one often requires a 3rd party javascript library. It is now possible to include such a library in Stadium by adding it into the Head property of the application. Whatever you type into the Head property, is included as-is into the HTML &lt;head&gt; element of the application. That means, whatever is allowed in a normal HTML head, can also be typed into the Head property in Stadium.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s look at an example. A while ago I came across this great markdown editor created by ToastUI, and luck so has it that it would work extremely well in the current application I am building in Stadium. So I head over to the Application node in the Application Explorer and open the Head editor. Once there, I add the script and stylesheet of the ToastUI Editor and hit Save. Once this has been done, I can now use the ToastUI library in any JavaScript action or expression throughout my application.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1809,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/09/Image-c.png" alt="" class="wp-image-1809"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>I hope that my explanation of the new Stadium features here has inspired you to go and try out the Repeater! And when you have, please let us know what your experience was using it. Read further on all our other controls in our <a href="https://stadium.software/docs/Controls">docs</a>.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1805</wp:post_id>
		<wp:post_date><![CDATA[2021-09-08 09:42:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-09-08 07:42:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-22]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[repeater]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.24</title>
		<link>https://stadium.software/new-release-stadium-5-24/</link>
		<pubDate>Mon, 08 Nov 2021 15:13:22 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1812</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><span class="has-inline-color has-black-color"><em>Object-oriented programming (OOP) is a <a href="https://en.wikipedia.org/wiki/Programming_paradigm">programming paradigm</a> based on the concept of "<a href="https://en.wikipedia.org/wiki/Object_(computer_science)">objects</a>", which can contain <a href="https://en.wikipedia.org/wiki/Data">data</a> and code: data in the form of <a href="https://en.wikipedia.org/wiki/Field_(computer_science)">fields</a> (often known as <a href="https://en.wikipedia.org/wiki/Attribute_(computing)">attributes</a> or properties), and code, in the form of procedures (often known as <a href="https://en.wikipedia.org/wiki/Method_(computer_science)">methods</a>).</em> </span></p><cite><a href="https://en.wikipedia.org/wiki/Object-oriented_programming">https://en.wikipedia.org/wiki/Object-oriented_programming</a> </cite></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In OOP, objects are used to pass data around in applications. In Stadium, this is not much different - the result of web services, databases and more are simply objects. Often, however, the builder of an application wants to create a custom object to either group data together or to simplify working with data in the application. <strong><em>Stadium Types</em></strong> is the answer to this!</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Types</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A Type is a template to create objects. The Type Editor (seen in the image below), allows the builder to define the properties with a name and a JavaScript type.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1813,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/11/1-Create-type-1024x641.png" alt="Creating a type" class="wp-image-1813"/><figcaption>Creating a type</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Once created and defined, an object can be instantiated from the type by dragging it into the script or eventhandler. Set the initial values of the object by setting the <em>Value</em> property to a JavaScript object containing the properties you want to set. Be on the lookout for the specialized Object Editor in one of the next releases that will allow the builder to set the initial values via dropdowns instead of hand-typing a JavaScript object. In the image below, the <em>name</em>, <em>email</em> and <em>phone</em> properties are set. The <em>name </em>property is initialized to another object which contains the <em>title</em>, <em>first</em> and <em>last</em> properties.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1814,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2021/11/2-Initialize-type-1024x673.png" alt="Setting initial values" class="wp-image-1814"/><figcaption>Setting initial values</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>So creating a type simplifies initiating objects of the same type. Are there any other advantages? Yes! Using the type becomes as easy as selecting its properties from the dropdown.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1815,"sizeSlug":"full"} -->
<figure class="wp-block-image size-full"><img src="https://stadium.software/wp-content/uploads/2021/11/3-Using-a-type.png" alt="Using a type" class="wp-image-1815"/><figcaption>Using a type</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The next big advantage is the ease of maintenance. Should a property name of a type change, all references across the application are automatically updated - no need for further interaction from the builder and no more runtime bugs of manually typed references that were overlooked after changing a property name. Deleting a type is just as easy with validations informing you of all the locations in the application where that deleted type was used.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Finally... is this all there is to Types? No, not by a long shot! This is only the start and from here you will see how tightly integrated Types will become throughout the Stadium Designer. A change that will soon be coming through is the Object Editor (as mentioned before), thereafter a Web Service result type simplifying working with the result even further. We might even go as far as allowing you to drag a type onto a page and then automatically generate a form based on the type properties. Keep your eyes peeled for improvements on Types that will regularly be rolled out.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1812</wp:post_id>
		<wp:post_date><![CDATA[2021-11-08 17:13:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-08 15:13:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-24]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Types]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>New Release: Stadium 5.25</title>
		<link>https://stadium.software/new-release-stadium-5-25/</link>
		<pubDate>Fri, 14 Jan 2022 12:50:23 +0000</pubDate>
		<dc:creator><![CDATA[Anthony]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1821</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Last year a lot happened!! We moved from 32 bit to 64 bit and added lots of new features. Among these were:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Blocky Layout</li><li>OAuth &amp; Azure Active Directory</li><li>URL Editor</li><li>Three new Layout Controls - Grid, Flexbox and Container</li><li>Repeater</li><li>Types</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>But that is not where we stopped… The devs were hard at work over the festive season, and we are kicking this new year off with a new Stadium 5 release! This release focuses on improving the UX when building an application, specifically setting values in the Property Grid. Or, even more specifically, the Property Grid ReferenceComboBox.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The ReferenceComboBox filter</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The ReferenceComboBox is the dropdown in the Property Grid where you select Settings, Control properties, Variables, create Expressions, etc. Unfortunately, on control- or action-heavy pages, this dropdown grows to an excessively long list and results in a scrolling nightmare for the builder. The image below is a screenshot of such a case.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1822,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2022/01/Screenshot-2022-01-14-at-14.46.31.png" alt="" class="wp-image-1822"/><figcaption>Creating a type</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>To address this, we added a filter box to the top of the ReferenceComboBox, which filters on the item name. As the name is typed in, the contents in the dropdown will be restricted to only those items satisfying the filter criteria.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1823,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://stadium.software/wp-content/uploads/2022/01/Screenshot-2022-01-14-at-14.46.35.png" alt="" class="wp-image-1823"/><figcaption>Setting initial values</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Adding this filter reduces the amount of scrolling and searching around in the ReferenceComboBox and allows you to focus on what is most important - the application logic. So please try it out and let us know what you think!</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1821</wp:post_id>
		<wp:post_date><![CDATA[2022-01-14 14:50:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-14 12:50:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-release-stadium-5-25]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="announcements"><![CDATA[Announcements]]></category>
		<category domain="post_tag" nicename="release"><![CDATA[Release]]></category>
		<category domain="post_tag" nicename="stadium"><![CDATA[Stadium]]></category>
		<category domain="post_tag" nicename="web-application-builder"><![CDATA[Web Application Builder]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[821]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Property Grid Reference]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[46]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[new-release-stadium-5-14-2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Updates on the new Property Grid Reference.]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Stadium 6 is Live 🚀</title>
		<link>https://stadium.software/stadium-6-is-live/</link>
		<pubDate>Mon, 01 Aug 2022 08:36:03 +0000</pubDate>
		<dc:creator><![CDATA[Shantoie]]></dc:creator>
		<guid isPermaLink="false">https://stadium.software/?p=1832</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-weight: 400;">The latest version of </span><a href="https://stadium.software/" target="_blank" rel="noopener noreferrer"><span style="font-weight: 400;">Stadium</span></a><span style="font-weight: 400;"> is </span><b>live</b><span style="font-weight: 400;">. Stadium 6 comes with improvements to performance, user experience, a brand new architecture (SPA) and quite a few new helpful features. Have a look at the release notes </span><a href="https://community.stadium.software/community/t/stadium-6-0-2969/175" target="_blank" rel="noopener noreferrer"><span style="font-weight: 400;">here</span></a><span style="font-weight: 400;">. </span>

<span style="font-weight: 400;">The low-code web application builder has never looked better. All the features of the previous version are still available and Stadium 6 is reverse compatible with Stadium 5 applications. </span>

<span style="font-weight: 400;">Let's take a look at some of the new features of Stadium 6:</span>
<h2><span style="font-weight: 400;">Build in the dark</span></h2>
<span style="font-weight: 400;">There should be a law that every application needs a dark mode. It's a preference of many developers and can help with eye strain during those long development sessions. Stadium 6 now has a fantastic-looking Dark mode.</span>

<img class="alignnone size-full wp-image-1833" src="https://stadium.software/wp-content/uploads/2022/08/image1.png" alt="" width="1917" height="1023" />

<span style="font-weight: 400;">If you prefer the classic Stadium theme as it was in Stadium 5, you can always switch between the two themes. </span>
<h2><span style="font-weight: 400;">It's all about Speed</span></h2>
<span style="font-weight: 400;">A major part of developing a web application is to make constant, little changes because that label is just not right. Fine-tuning CSS with Stadium has been a joy since stadium 5 with the way styles are handled, but previewing could become a pain when you are working on a large application. This has been addressed in Stadium 6. Now when you click on the preview button you can see changes made much quicker than you would have in Stadium 5. </span>

<span style="font-weight: 400;">Below is a speed test of previewing a very simple application in Stadium 5 versus Stadium 6:</span>

<img class="alignnone size-full wp-image-1837" src="https://stadium.software/wp-content/uploads/2022/08/StadiumSpeedTest-1-1.gif" alt="" width="1440" height="810" />

<span style="font-weight: 400;">When doing tests on more complex applications the performance increase is much more notable, but even with this very simple page, we can see a more than 500% improvement. </span>

<span style="font-weight: 400;">The preview speed is not the only performance improvement. Applications built with Stadium 6 will now perform much better because of the new Single Page Application (SPA) architecture. </span>
<h2><span style="font-weight: 400;">The SPA Future</span></h2>
<span style="font-weight: 400;">Single Page Applications (SPA) have become a staple of modern web applications. Given the fast responses, flexibility and praised user experience it's easy to understand the appeal. The new SPA architecture leads to better performance of applications built with Stadium 6, and also a better user experience.</span>

<span style="font-weight: 400;">SPAs have many uses but why are they so relevant? Some of the most common examples include Gmail, Google Maps and Facebook. If you have ever used one of these services you have first-hand experience of how user-friendly and responsive a SPA can be.</span>

<span style="font-weight: 400;">A highly simplified explanation would be: A SPA has only one HTML page with only data (in JSON format) travelling between the server and the page. The page is populated with this data via JavaScript. Because there is only one page, it only needs to be loaded once. Luckily Stadium 6 manages all of this for you, so you only need to build your application. </span>

<img class="alignnone size-full wp-image-1838" src="https://stadium.software/wp-content/uploads/2022/08/Stadium-Showcase-1.gif" alt="" width="800" height="450" />

<span style="font-weight: 400;">This is not the only change, there is a bunch of new features that will make development and application building much more feature rich. </span>
<h2><span style="font-weight: 400;">New Features</span></h2>
<span style="font-weight: 400;">Stadium 6 introduces new features and improvements to existing features. Some notable mentions include:</span>
<ul>
 	<li style="font-weight: 400;" aria-level="1"><a href="https://stadium.software/docs/actions/while/#__layout"><i><span style="font-weight: 400;">While Loops</span></i></a><span style="font-weight: 400;"> - This action allows you to perform a loop in your script. There are also two ways to loop, a simple while loop (perform </span><i><span style="font-weight: 400;">x</span></i><span style="font-weight: 400;"> until the condition is met) or a Do while loop (perform </span><i><span style="font-weight: 400;">x</span></i><span style="font-weight: 400;"> and then check if the condition is met, do this until the condition is met)</span></li>
 	<li style="font-weight: 400;" aria-level="1"><i><span style="font-weight: 400;">Lists </span></i><span style="font-weight: 400;">- This action allows you to create a list or array that you can use later in your script. </span></li>
 	<li style="font-weight: 400;" aria-level="1"><i><span style="font-weight: 400;">New file upload events</span></i><span style="font-weight: 400;"> - The File Uploaded and File Deleted. What this means is that an event can be created or one, or both of these triggers. This event will trigger when the file is uploaded (or Deleted). An example can be that you want to display a message that a file was successfully loaded or deleted, or you want to log this somewhere. This was not present in Stadium 5 and now offers you much more flexibility, tracking and customization when working with files on your site. </span></li>
 	<li style="font-weight: 400;" aria-level="1"><i><span style="font-weight: 400;">The Object Editor</span></i><span style="font-weight: 400;"> - This allows you to create and populate a complex type by using an editor.</span></li>
</ul>
<span style="font-weight: 400;">The full list of released features can be seen on the </span><a href="https://community.stadium.software/community/t/stadium-6-0-2969/175" target="_blank" rel="noopener noreferrer"><span style="font-weight: 400;">release notes</span></a><span style="font-weight: 400;">. </span>
<h2><span style="font-weight: 400;">New version same quality</span></h2>
<span style="font-weight: 400;">The Stadium team wants to continue providing you with quality tools and part of that </span><a href="https://stadium.software/why-we-built/" target="_blank" rel="noopener noreferrer"><span style="font-weight: 400;">journey</span></a><span style="font-weight: 400;"> is advancement and constant improvements. This is why the release of Stadium 6 is such a landmark. With enhanced performance, a better user experience and many new features, Stadium 6 is the way to go. </span>

<span style="font-weight: 400;">If you are starting a new project for your data management, business operations or anything that needs a front end, why not give Stadium 6 a try </span><a href="https://stadium.software/download/" target="_blank" rel="noopener noreferrer"><span style="font-weight: 400;">today</span></a><span style="font-weight: 400;">? Have any questions? Reach out to us in the </span><a href="https://community.stadium.software/community/" target="_blank" rel="noopener noreferrer"><span style="font-weight: 400;">Stadium community</span></a><span style="font-weight: 400;">. 🏟️ </span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1832</wp:post_id>
		<wp:post_date><![CDATA[2022-08-01 10:36:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-08-01 08:36:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stadium-6-is-live]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="new-features"><![CDATA[New Features]]></category>
		<category domain="post_tag" nicename="stadium-6"><![CDATA[Stadium 6]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:6:"layout";s:7:"default";s:4:"menu";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Stadium 6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[The latest verson of Stadium is now available, The low-code web application builder is looking better than ever, now with SPA!]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[stadium-6-is-live-%f0%9f%9a%80]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[822]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	